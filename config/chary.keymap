#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };


    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        Base {
            label = "Base";
            bindings = <
              &lt SCR Q  &lt SNI W  &kp E  &kp R  &kp T                 &kp Y  &kp U  &kp I  &kp O  &kp P  
              &hml LALT A  &hml LCTRL S  &hml LGUI D &hml LSHFT F       &kp G &kp H  &hmr RSHFT J  &hmr RGUI K  &hmr RCTRL L  &hmr RALT SEMICOLON  
              &lt POI Z  &kp X  &kp C  &kp V  &kp B                     &kp N  &kp M  &kp COMMA  &kp DOT  &lt POI SLASH
                &lt NUFU TAB  &lt SYM SPACE &lt MED ESC                 &kp BACKSPACE  &kp SPACE  &mkp LCLK
            >;
        };

        NuFu {
            label = "Numeral/Function";
            bindings = <
                &kp N1  &kp N2  &kp N3  &kp N4 &kp N5        &N6  &kp N7  &kp N8  &kp N9  &kp N0
                &kp F1  &kp F2  &kp F3  &kp F4 &kp F5        &kp SLASH  &kp N4  &kp N5  &kp N6  &kp PLUS
                &kp F6  &kp F7  &kp F8  &kp F9 &kp F10        &kp ASTRK  &kp N1  &kp N2  &kp N3  &kp MINUS
                                &trans  &trans  &trans        &kp EQUAL &kp N0 &trans
            >;
        };

        Symbol {
            label = "Symbol";
            bindings = <
              &kp EXCL &kp AT  &kp HASH   &kp DLLR    &kp PRCNT        &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR
              &kp GRAVE &hml LALT 0 &hml LCTRL 0  &hml LGUI 0 &hml LSHFT 0                  &trans &hmr RSHFT LBKT  &hmr RGUI RBKT  &hmr RCTRL APOS &hmr RALT BSLH
              &kp UNDER &kp EXCL  &kp AT     &kp HASH  &kp GRAVE       &trans &kp MINUS &kp EQUAL &trans  &trans
                                  &trans     &trans    &trans          &kp DELETE &trans &trans
            >;
        };

        Navigation {
            label = "Navigation";
            bindings = <
                         &trans  &trans  &trans  &kp HOME  &kp PAGE_UP         &trans    &trans         &kp TAB      &trans    &trans
                         &trans  &trans  &trans  &kp END  &kp PAGE_DOWN         &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT &trans
                         &trans  &trans  &trans  &trans  &trans         &trans   &trans    &trans         &trans       &trans 
                                         &trans  &trans  &trans         &trans    &trans &trans
            >;
        };

        Media {
            label = "Media";
            bindings = <
              &trans     &trans        &bt BT_CLR_ALL &trans       &trans            &trans      &trans        &bt BT_CLR_ALL  &trans        &trans
              &kp C_MUTE &kp C_VOL_DN  &kp C_VOL_UP     &kp C_PREV &kp C_NEXT        &kp C_PREV  &kp C_NEXT  &kp C_VOL_DN      &kp C_VOL_UP  &kp C_MUTE
              &trans     &trans        &trans         &trans       &trans            &trans      &trans        &trans          &trans        &trans
                                       &kp C_STOP    &kp C_PLAY_PAUSE  &trans        &kp C_PLAY_PAUSE  &kp C_STOP &trans
            >;
        };

        Pointer {
            label = "Pointer";
            bindings = <
              &trans       &trans       &trans        &trans        &trans               &trans &trans        &trans        &trans       &trans
              &kp LGUI     &kp LALT     &kp LCTRL     &kp LSHFT     &trans               &trans &kp RSHFT     &kp RCTRL     &kp RALT     &kp RGUI
              &trans       &mo SCR      &mo SNI       &trans        &trans               &trans &trans        &tog SNI      &tog SCR     &trans
                                            &mkp RCLK  &mkp LCLK  &mkp MCLK         &mkp MCLK  &mkp LCLK &trans
            >;
        };

        Scroll {
            label = "Scroll";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        Sniper {
            label = "Sniper";
            bindings = <
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                                &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
