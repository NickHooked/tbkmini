#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NUFU 1
#define SYM 2
#define NAV 3
#define MED 4
#define POI 5
#define SCR 6
#define SNI 7

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };


    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };


    keymap {
        compatible = "zmk,keymap";
        Base {
            label = "Base";
            bindings = <
              &lt SCR Q  &lt SNI W  &kp E  &kp R  &kp T                 &kp Y  &kp U  &kp I  &kp O  &kp P  
              &hml LALT A  &hml LCTRL S  &hml LGUI D &hml LSHFT F       &kp G &kp H  &hmr RSHFT J  &hmr RGUI K  &hmr RCTRL L  &hmr RALT SEMICOLON  
              &lt POI Z  &kp X  &kp C  &kp V  &kp B                     &kp N  &kp M  &kp COMMA  &kp DOT  &lt POI SLASH
                &lt NUFU TAB  &lt SYM SPACE &lt MED ESC                 &kp BACKSPACE  &kp SPACE  &mkp LCLK
            >;
        };

    };
};
