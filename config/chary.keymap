#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define NUMBER  1
#define FN  2
#define HOTKEY  3

&sl {
  release-after-ms = <250>;
};

&mt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <150>;
};


/ {
    
    chosen { zmk,matrix_transform = &five_column_transform; };


    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_HAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            flavor = "balanced";
            quick-tap-ms = <175>;
            require-prior-idle-ms = <125>;
            hold-trigger-on-release;
        };
    };
    

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEFAULT";
            bindings = <
            &lt 2 Q  &kp W       &kp E         &kp R      &kp T              &kp Y          &kp U      &kp I      &kp O      &kp P     
            &kp A  &kp S       &kp D         &kp F      &kp G              &kp H          &kp J      &kp K      &kp L      &kp SEMI 
            &kp Z  &kp X       &kp C         &kp V      &kp B              &kp N          &kp M      &kp COMMA  &kp DOT    &lt 2 FSLH 
                                         &mkp RCLK  &mt LCTRL RETURN  &mo 1              &kp BACKSPACE  &kp SPACE  &mkp LCLK
                    
            >;
        };
        
        number_layer {
            label = "NUMBER";
                                                                           
            bindings = <
            &kp F2         &kp F3        &kp F4         &kp F5      &kp F6      &kp F7  &kp F8   &kp F9   &kp F10      &kp F12
            &kp N1         &kp N2        &kp N3         &kp N4      &kp N5      &kp N6  &kp N7   &kp N8   &kp N9        &kp PLUS
            &mkp MCLK      &kp C_VOL_DN  &kp C_VOL_UP   &none       &none       &none   &none    &none    &none          &kp KP_DOT
                                         &none         &none          &none       &none       &none   &none   
                             
            >;
        };

        fn_layer {
            label = "FN";
            bindings = <
            &bt BT_SEL 1  &kp F10  &kp F11  &kp F12  &bt BT_CLR       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3    &bt BT_CLR
            &sys_reset    &kp F7   &kp F8   &kp F9   &out OUT_USB     &out OUT_USB  &none         &none         &none                 &sys_reset
            &none         &kp F4   &kp F5   &kp F6   &out OUT_BLE     &out OUT_BLE  &none         &none         &none                &none
                                                 &kp F1   &kp F2   &kp F3           &none         &none         &none
                           
            >;
        };

        hotkey_layer {
            label = "HOTKEY";
            bindings = <
            &none    &none     &kp UP    &none        &none         &none  &none     &kp UP     &none      &none  
            &none    &kp LEFT  &kp DOWN  &kp RIGHT    &none         &none  &kp LEFT  &kp DOWN   &kp RIGHT  &none  
            &none    &none     &none     &none        &none         &none  &none     &none      &none      &none  
                                      &none     &none        &none         &none  &none     &none     
                       
            >;
        };

    };
};